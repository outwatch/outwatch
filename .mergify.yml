queue_rules:
  - name: duplicated default from Merge PRs (rebase) which are ready to merge
    queue_conditions:
      - base=master
      - label=dependencies
      - check-success~=build \(2\.13\.\d+\)
      - check-success~=build \(3\.\d+\.\d+\)
      - label=ready-to-merge-rebase
      - base=master
      - check-success~=build \(2\.13\.\d+\)
      - check-success~=build \(3\.\d+\.\d+\)
      - "#review-requested=0"
      - "#changes-requested-reviews-by=0"
    merge_conditions: []
    merge_method: rebase
  - name: duplicated default from Merge PRs (squash) which are ready to merge
    queue_conditions:
      - base=master
      - label=dependencies
      - check-success~=build \(2\.13\.\d+\)
      - check-success~=build \(3\.\d+\.\d+\)
      - label=ready-to-merge-squash
      - base=master
      - check-success~=build \(2\.13\.\d+\)
      - check-success~=build \(3\.\d+\.\d+\)
      - "#review-requested=0"
      - "#changes-requested-reviews-by=0"
    merge_conditions: []
    merge_method: squash
  - name: default
    queue_conditions:
      - base=master
      - label=dependencies
      - check-success~=build \(2\.13\.\d+\)
      - check-success~=build \(3\.\d+\.\d+\)
    merge_conditions:
      # Conditions to get out of the queue (= merged)
      - check-success~=build \(2\.13\.\d+\)
      - check-success~=build \(3\.\d+\.\d+\)
    merge_method: squash

pull_request_rules:
  - name: Label Scala Steward PRs
    conditions:
      - author=scala-steward
    actions:
      label:
        add: [dependencies, scala]
  - name: Merge PRs (rebase) which are ready to merge + Merge PRs (squash) which are
      ready to merge + Merge dependency-update PRs
    conditions: []
    actions:
      queue:
