name: Test
on:
  push:
    branches: [master]
    tags: [ v* ]
  pull_request:
  workflow_dispatch:
jobs:
  build:
    strategy:
      matrix:
        scalaVersion: ["2.13.12", "3.3.1"]
    runs-on: ubuntu-20.04
    env:
      JAVA_OPTS: -Xms4096M -Xmx4096M -Xss6M
      JVM_OPTS:  -Xms4096M -Xmx4096M -Xss6M
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: coursier/cache-action@v6
      - uses: olafurpg/setup-scala@v12

      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - uses: actions/cache@v2
        name: Cache scalajs-bundler node_modules
        with:
          path: "*/target/**/main/node_modules"
          key: ${{ runner.os }}-yarn-scalajs-bundler-${{ hashFiles('*/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-scalajs-bundler

      - uses: actions/cache@v2
        name: Cache scala targets (only for same commit)
        with:
          path: "**/target"
          key: ${{ runner.os }}-scala-target-${{ github.sha }}

      - name: Test
        run: sbt \
          ++${{matrix.scalaVersion}} \
          compile Test/compile \
          ${{ startsWith(matrix.scalaVersion, '2.13.') && 'coverage test coverageReport' || 'test' }} \
          scalafmtCheck scalafmtSbtCheck \
          docs/mdoc bench/compile

      - uses: codecov/codecov-action@v3
        if: startsWith(matrix.scalaVersion, '2.13.')
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)

      # - name: Debug over SSH (tmate)
      #   # if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     limit-access-to-actor: true

  publish:
    needs: [build]
    # if this is not a pull request, run only on master or tags pushes.
    # if this is a pull request, run only when 'publish' label is set
    if: (github.event_name != 'pull_request' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))) || 
      (github.event_name == 'pull_request' &&  contains(github.event.pull_request.labels.*.name, 'publish'))
    strategy:
      matrix:
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0 # full history with tags
      - uses: olafurpg/setup-scala@v12
        with:
          java-version: 8
      - name: Cache SBT
        uses: coursier/cache-action@v6

      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - uses: actions/cache@v2
        name: Cache node_modules
        with:
          path: "**/main/node_modules"
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/main/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - uses: actions/cache@v2
        name: Cache scala targets
        with:
          path: "**/target"
          key: ${{ runner.os }}-scala-target-${{ github.sha }}

      - name: Publish
        run: sbt version "git status" ci-release "git status"
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

      - name: Create a GitHub release
        if: ${{ github.ref_type == 'tag' }}
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
